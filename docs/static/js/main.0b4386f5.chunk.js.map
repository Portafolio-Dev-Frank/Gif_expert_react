{"version":3,"sources":["components/AddCategory.js","enviroments/GetGifs.js","components/GIfGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GIfGridItem","console","log","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","useFetchGifs","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"mMAiCeA,EA9BK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAErB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACE,sBAAMC,SAVa,SAACC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC5CN,EAAc,MAMhB,SACE,uBACEO,KAAK,OACLC,MAAOT,EACPU,SAlBoB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,a,+BCPdG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAYZM,GAZY,4CAAH,sDCCPO,EAAc,SAAC,GAAwB,IAAtBJ,EAAqB,EAArBA,GAAIT,EAAiB,EAAjBA,IAAKU,EAAY,EAAZA,MAInC,OAFAI,QAAQC,IAAIN,EAAIT,EAAKU,GAGjB,sBAAKM,UAAU,yCAAf,UACI,qBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,4BAAIA,QCuBDS,EA5BC,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAIf,ECEwB,SAACA,GACzB,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNe,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAkBA,OAVAC,qBAAU,WACN1B,EAAQC,GAAU0B,MAAK,SAAAb,GACfG,QAAQC,IAAIJ,GACZW,EAAS,CACLjB,KAAMM,EACNS,SAAS,SAGtB,CAACtB,IAEGuB,EDrBmBI,CAAa3B,GAA/BO,EAAR,EAAQA,KAAMe,EAAd,EAAcA,QAId,OACI,qCACI,6BAAKtB,IAEJsB,EAAU,WAAa,oBAExB,qBAAKJ,UAAU,YAAf,SAGQX,EAAKE,KAAI,SAAAC,GAAG,OACR,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEStBiB,EA5BM,WAGjB,MAAoC1C,mBAAS,CAAC,aAA9C,mBAAOQ,EAAP,KAAmBT,EAAnB,KAMA,OACI,qCACI,4CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAIA,6BAEQS,EAAWe,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MCnBtC6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0b4386f5.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n\r\n  const [inputValue, setInputValue] = useState('')\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (inputValue.trim().length > 2) {\r\n      setCategories(categories => [inputValue, ...categories]);\r\n      setInputValue('');\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        value={inputValue}\r\n        onChange={handleInputChange} />\r\n    </form>\r\n  )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired\r\n}\r\nexport default AddCategory;","\r\nexport const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=rHiX3vcW4Zznq0ynBsqTxufQqxPCMfo0`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GIfGridItem = ({ id, url, title }) => {\r\n\r\n    console.log(id, url, title);\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GIfGridItem } from './GIfGridItem';\r\n\r\nconst GifGrid = ({ category }) => {\r\n\r\n\r\n    // const [images, setimages] = useState([])\r\n    const { data, loading } = useFetchGifs(category);\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n\r\n            {loading ? 'cargando' : '...carga completa'}\r\n\r\n            <div className=\"card-grid\">\r\n\r\n                {\r\n                    data.map(img => (\r\n                        <GIfGridItem\r\n                            key={img.id}\r\n                            {...img} />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGrid","\r\n// ==================================\r\n// todos los hooks son funciones,\r\n// por estandar el name del archivo comienza con use\r\n// ==================================\r\n\r\nimport { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../enviroments/GetGifs\";\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    /**\r\n     * Hook para ejecutarse una sola vez\r\n     */\r\n    useEffect(() => {\r\n        getGifs(category).then(images => {\r\n                console.log(images);\r\n                setstate({\r\n                    data: images,\r\n                    loading: false\r\n                })\r\n        });\r\n    }, [category])\r\n\r\n    return state;\r\n}","import React, { useState } from 'react'\r\nimport AddCategory from './components/AddCategory'\r\nimport  GifGrid  from './components/GifGrid'\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    // const categories = [ 'one puch', 'zamurai', 'goku'];\r\n    const [categories, setCategories] = useState(['one puch'])\r\n\r\n    // const handleAdd = () =>{\r\n    //     setCategories(categories => [...categories, 'pepejuan']);\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h1>Gif expert</h1>\r\n            <AddCategory setCategories={setCategories}></AddCategory>\r\n            <hr />\r\n            {/* anadir categoria con setCategories */}\r\n            {/* <button onClick={handleAdd}>Agregar</button> */}\r\n\r\n            <ol>\r\n                {\r\n                    categories.map(category => (\r\n                        <GifGrid key={category} category={category}></GifGrid>\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}